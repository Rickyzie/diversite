<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.diversite.mapper.user.UserMapper">

    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (name, email, password_hash, phone_number, address)
        VALUES (#{name}, #{email}, #{passwordHash}, #{phoneNumber}, #{address})
    </insert>

    <select id="findByEmailAndPassword" resultType="com.diversite.entity.user.UserEntity">
        SELECT * FROM users WHERE email = #{email} AND password_hash = #{passwordHash}
    </select>

    <select id="findByEmail" resultMap="findByEmailMap">
        SELECT * FROM users WHERE email = #{email} LIMIT 1
    </select>
    <resultMap id="findByEmailMap" type="com.diversite.entity.user.UserEntity">
        <result column="name" property="name"/>
        <result column="email" property="email"/>
        <result column="password_hash" property="passwordHash"/>
        <result column="phone_number" property="phoneNumber"/>
        <result column="create_at" property="createAt"/>
        <result column="update_at" property="updateAt"/>
    </resultMap>

    <select id="getUserById" resultType="com.diversite.entity.user.UserEntity">
        SELECT * FROM users WHERE id = #{id} LIMIT 1
    </select>


    <select id="getAllUsers" resultMap="getAllUsersMap">
        SELECT id, name, email, phone_number, address, created_at, updated_at FROM users
    </select>
    <resultMap id="getAllUsersMap" type="com.diversite.entity.user.UserInfo">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="email" property="email"/>
        <result column="address" property="address"/>
        <result column="phone_number" property="phoneNumber"/>
        <result column="created_at" property="createdAt" javaType="java.time.OffsetTime"/>
        <result column="updated_at" property="updatedAt" javaType="java.time.OffsetTime"/>
    </resultMap>

    <update id="updateUser">
        UPDATE users
        SET name = #{name},
            email = #{email},
            password_hash = #{passwordHash},
            phone_number = #{phoneNumber},
            address = #{address},
            updated_at = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <!-- Delete User -->
    <delete id="deleteUser">
        DELETE FROM public.users WHERE id = #{id}
    </delete>

</mapper>

